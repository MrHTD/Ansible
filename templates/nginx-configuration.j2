server {
    listen 80;
    listen [::]:80;

    server_name {{ domain_name }};

    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl;

    server_name {{ domain_name }};

    # SSL Certificates 
    ssl_certificate {{ ssl_certificate_path }};
    ssl_certificate_key {{ ssl_certificate_key_path }};

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security Hardening
    server_tokens off;

{# # Security Headers 
    add_header X-Frame-Options SAMEORIGIN always; # Prevent Clickjacking 
    add_header X-XSS-Protection "1; mode=block" always; # Prevent XSS attacks 
    add_header X-Content-Type-Options nosniff always; # Prevent MIME sniffing 
    add_header Referrer-Policy no-referrer-when-downgrade always; # Control referrer policy 
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always; # Restrict feature access 
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # Enforce HTTPS 
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; frame-ancestors 'self';" always;
#}

    location / {
        proxy_pass http://localhost:{{ port }};
        proxy_http_version 1.1;

        # WebSocket and upgrade headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Forward the original headers
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
       
    }
}